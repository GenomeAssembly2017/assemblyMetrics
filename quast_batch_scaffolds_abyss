#!/data/home/jrowell32/perl/bin/perl

use strict;
use Getopt::Long;
use File::Basename;
use File::Temp;

#User-specific configuration
my $assembledGenome = "scaffolds.fasta";
my $quastLoc = "~/bin";
my $outName = "quast-scaffolds";

my $script = basename($0);  
my ($inDir, $ref);

if (@ARGV < 1) { usage(); exit 1; } 	

GetOptions ('in=s' => \$inDir,
			'r=s' => \$ref);
			
die usage() unless (defined $inDir);

my @sampleFolder = grep /OB[0-9]*$/, glob("$inDir/*");
my @filePath = map {$_ . "/". $assembledGenome } @sampleFolder;

	my $outDir = "$inDir/$outName";	
	if (not defined $outDir) {
		my $outDir = `mkdir $outDir`;
	}	
	print "Running Quast on files in: $inDir\n";
	if ($ref) {
		`python $quastLoc/quast.py -o $outDir -R $ref --scaffolds @filePath`;
	} 
	else {
		`python $quastLoc/quast.py -o $outDir --scaffolds @filePath`;
	}


exit;


sub usage{
    warn <<"EOF";
USAGE
  $script -in <indir> 
  
DESCRIPTION
  Runs Quast on a directory of final contig files generated by an assembler.
  It will place the quast results in a subdirectory called <quast_results> inside
  the parent folder containing the final contigs file.  The script can optionally
  be run with a reference genome specified by using the -r option.
  
  The script is written to follow a specific subdirectory organizational format:
	./<sample_name>/<kmer_size>/<final_contigs.fasta>
	
  Note the user-configurable variables at the top of the script:
	Quast location (~/bin by default)
	Name of final contigs file (final_contigs.fasta by default)
  
OPTIONS
  -in	dir			Directory with subdirectories for samples
  -r 	filename	Reference genome in FASTA format
  
EXAMPLES
  $script -in <./directory_of_samples>
  $script -r <reference genome> -in <./directory_of_samples>
  
EXIT STATUS
  0     Successful completion
  >0    An error occurred

EOF
}