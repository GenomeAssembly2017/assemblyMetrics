#!/data/home/jrowell32/perl/bin/perl

use strict;
use Getopt::Long;
use File::Basename;
use File::Temp;

#User-specific configuration
my $quastLoc = "~/bin";
my $outName = "quast-SOAPdenovo2-scaffolds-";

my $script = basename($0);  
my ($inDir, $ref);

if (@ARGV < 1) { usage(); exit 1; } 	

GetOptions ('in=s' => \$inDir,
			'r=s' => \$ref);
			
die usage() unless (defined $inDir);

my $i;
my @kFolder = grep /SOAPdenovo2_k[0-9,a-z]*$/, glob("$inDir/*");

	
for ($i = 0; $i < @kFolder; $i++ ){
	my $kmer = (split /_/, $kFolder[$i])[1];
	my $currentFolder = basename($kFolder[$i]);
	my @sampleList = grep /OB00[0-9]*.scafSeq$/, glob("$kFolder[$i]/*");
	my $outDir = "$inDir/$outName$kmer";	
	if (not defined $outDir) {
		my $outDir = `mkdir -p $inDir/$outName$kmer`;
	}	
	print "Running Quast on: $currentFolder\n";
	if ($ref) {
		`python $quastLoc/quast.py -o $outDir -R $ref --scaffolds @sampleList`;
	} 
	else {
		`python $quastLoc/quast.py -o $outDir --scaffolds @sampleList`;
	}
}

exit;


sub usage{
    warn <<"EOF";
USAGE
  $script -in <indir> 
  
DESCRIPTION
  Runs Quast on a directory of final contig files generated by an assembler.
  It will place the quast results in a subdirectory called <quast_results> inside
  the parent folder containing the final contigs file.  The script can optionally
  be run with a reference genome specified by using the -r option.
  
  The script is written to follow a specific subdirectory organizational format:
	./<sample_name>/<kmer_size>/<final_contigs.fasta>
	
  Note the user-configurable variables at the top of the script:
	Quast location (~/bin by default)
	Name of final contigs file (final_contigs.fasta by default)
  
OPTIONS
  -in	dir			Directory with subdirectories for samples
  -r 	filename	Reference genome in FASTA format
  
EXAMPLES
  $script -in <./directory_of_samples>
  $script -r <reference genome> -in <./directory_of_samples>
  
EXIT STATUS
  0     Successful completion
  >0    An error occurred

EOF
}